upstream cookie-upstream {
 server cookie:8088;
}

# Force SSL
server {
    listen      80;
	server_name cookie.eztwo.com;
    return 301 https://$host$request_uri;
}

server {
	listen 443 ssl;
	server_name cookie.eztwo.com;

	client_max_body_size 0;

	gzip on;
	gzip_types application/json application/javascript application/x-javascript text/css;
	gzip_min_length 1024;
	gzip_comp_level 1;

	location / {
		proxy_pass http://cookie-upstream;
	}

	location /pics/ {
        expires 60d;
		alias /cookie/pics/;
	}

	##
	# SSL Settings
	##
	ssl_certificate /etc/nginx/conf.d/eztwo.com.crt;
	ssl_certificate_key /etc/nginx/conf.d/eztwo.com.key;
	ssl_session_timeout 5m;
	ssl_session_cache shared:SSL:50m;

	ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
	ssl_ciphers 'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA';
	ssl_prefer_server_ciphers on;

}
